//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Resources/PlayerInput/PlayerInputKeyboard.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace PunchPeng
{
    public partial class @PlayerInputKeyboard: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputKeyboard()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputKeyboard"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""ee5dc922-dc4c-4ec4-b5f5-f51e493f9907"",
            ""actions"": [
                {
                    ""name"": ""Player1Move"",
                    ""type"": ""Value"",
                    ""id"": ""8c0e95aa-41ef-4f75-a60b-d492e755d5dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player1Attack"",
                    ""type"": ""Button"",
                    ""id"": ""717b0e02-1d35-4c61-aa36-7b64970a5ef9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1Run"",
                    ""type"": ""Button"",
                    ""id"": ""59835df4-6cfa-4427-973b-bca5aa95e13f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1UseSkill"",
                    ""type"": ""Button"",
                    ""id"": ""c0f1fa9f-0d8d-4340-9e8a-dfd8c9c8eb8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Move"",
                    ""type"": ""Value"",
                    ""id"": ""17d5c02c-8a31-4b05-af95-5ec7f43057d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Attack"",
                    ""type"": ""Button"",
                    ""id"": ""3cecd80b-9992-4e1a-84b1-f64d9ecab480"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Run"",
                    ""type"": ""Button"",
                    ""id"": ""6bd65686-c88f-4690-a25e-a2d9f7f7af33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2UseSkill"",
                    ""type"": ""Button"",
                    ""id"": ""4260f2e0-d7ac-4b76-87f9-13c1a5793bb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""caa15fab-3424-4f9d-b346-3b0cfffc0b4e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""503a362a-1a62-4de7-a8f6-786ce5816d59"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""43f25935-8b29-4dc2-ab86-869ff6ecd729"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d535ae90-b3eb-4907-9c36-ad15a72d1470"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a94942b5-17dc-44c1-8269-106fb79f4ded"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1c2738ca-7cfd-47da-b0d2-fdc88ea712cb"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bfd83cd-94f8-4099-a83c-2eae0a950b6a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""208ad98e-ee1c-416e-9ea9-83fe518d7c2f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fb0035d-c8bc-4eb8-aaee-10f73cd2047b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1UseSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0f1b7129-57d1-4df1-b1ee-b76f38d44b4c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""406de486-95be-456f-883d-d74cd7691d62"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""eaca875a-63a3-4255-bde8-92516d8efb9c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2d55a4ef-21b0-4fd9-9905-19b21d8d5fc0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bd414fee-f1d6-48c5-8ef3-3100d0071abb"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""56a4ac30-167e-4479-9756-cceca68e36f9"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20b1e7b4-46c5-4762-baeb-ce317328f671"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86b43b28-0c64-4f78-b2f1-22937668dea1"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2UseSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // GamePlay
            m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
            m_GamePlay_Player1Move = m_GamePlay.FindAction("Player1Move", throwIfNotFound: true);
            m_GamePlay_Player1Attack = m_GamePlay.FindAction("Player1Attack", throwIfNotFound: true);
            m_GamePlay_Player1Run = m_GamePlay.FindAction("Player1Run", throwIfNotFound: true);
            m_GamePlay_Player1UseSkill = m_GamePlay.FindAction("Player1UseSkill", throwIfNotFound: true);
            m_GamePlay_Player2Move = m_GamePlay.FindAction("Player2Move", throwIfNotFound: true);
            m_GamePlay_Player2Attack = m_GamePlay.FindAction("Player2Attack", throwIfNotFound: true);
            m_GamePlay_Player2Run = m_GamePlay.FindAction("Player2Run", throwIfNotFound: true);
            m_GamePlay_Player2UseSkill = m_GamePlay.FindAction("Player2UseSkill", throwIfNotFound: true);
        }

        ~@PlayerInputKeyboard()
        {
            UnityEngine.Debug.Assert(!m_GamePlay.enabled, "This will cause a leak and performance issues, PlayerInputKeyboard.GamePlay.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // GamePlay
        private readonly InputActionMap m_GamePlay;
        private List<IGamePlayActions> m_GamePlayActionsCallbackInterfaces = new List<IGamePlayActions>();
        private readonly InputAction m_GamePlay_Player1Move;
        private readonly InputAction m_GamePlay_Player1Attack;
        private readonly InputAction m_GamePlay_Player1Run;
        private readonly InputAction m_GamePlay_Player1UseSkill;
        private readonly InputAction m_GamePlay_Player2Move;
        private readonly InputAction m_GamePlay_Player2Attack;
        private readonly InputAction m_GamePlay_Player2Run;
        private readonly InputAction m_GamePlay_Player2UseSkill;
        public struct GamePlayActions
        {
            private @PlayerInputKeyboard m_Wrapper;
            public GamePlayActions(@PlayerInputKeyboard wrapper) { m_Wrapper = wrapper; }
            public InputAction @Player1Move => m_Wrapper.m_GamePlay_Player1Move;
            public InputAction @Player1Attack => m_Wrapper.m_GamePlay_Player1Attack;
            public InputAction @Player1Run => m_Wrapper.m_GamePlay_Player1Run;
            public InputAction @Player1UseSkill => m_Wrapper.m_GamePlay_Player1UseSkill;
            public InputAction @Player2Move => m_Wrapper.m_GamePlay_Player2Move;
            public InputAction @Player2Attack => m_Wrapper.m_GamePlay_Player2Attack;
            public InputAction @Player2Run => m_Wrapper.m_GamePlay_Player2Run;
            public InputAction @Player2UseSkill => m_Wrapper.m_GamePlay_Player2UseSkill;
            public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
            public void AddCallbacks(IGamePlayActions instance)
            {
                if (instance == null || m_Wrapper.m_GamePlayActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GamePlayActionsCallbackInterfaces.Add(instance);
                @Player1Move.started += instance.OnPlayer1Move;
                @Player1Move.performed += instance.OnPlayer1Move;
                @Player1Move.canceled += instance.OnPlayer1Move;
                @Player1Attack.started += instance.OnPlayer1Attack;
                @Player1Attack.performed += instance.OnPlayer1Attack;
                @Player1Attack.canceled += instance.OnPlayer1Attack;
                @Player1Run.started += instance.OnPlayer1Run;
                @Player1Run.performed += instance.OnPlayer1Run;
                @Player1Run.canceled += instance.OnPlayer1Run;
                @Player1UseSkill.started += instance.OnPlayer1UseSkill;
                @Player1UseSkill.performed += instance.OnPlayer1UseSkill;
                @Player1UseSkill.canceled += instance.OnPlayer1UseSkill;
                @Player2Move.started += instance.OnPlayer2Move;
                @Player2Move.performed += instance.OnPlayer2Move;
                @Player2Move.canceled += instance.OnPlayer2Move;
                @Player2Attack.started += instance.OnPlayer2Attack;
                @Player2Attack.performed += instance.OnPlayer2Attack;
                @Player2Attack.canceled += instance.OnPlayer2Attack;
                @Player2Run.started += instance.OnPlayer2Run;
                @Player2Run.performed += instance.OnPlayer2Run;
                @Player2Run.canceled += instance.OnPlayer2Run;
                @Player2UseSkill.started += instance.OnPlayer2UseSkill;
                @Player2UseSkill.performed += instance.OnPlayer2UseSkill;
                @Player2UseSkill.canceled += instance.OnPlayer2UseSkill;
            }

            private void UnregisterCallbacks(IGamePlayActions instance)
            {
                @Player1Move.started -= instance.OnPlayer1Move;
                @Player1Move.performed -= instance.OnPlayer1Move;
                @Player1Move.canceled -= instance.OnPlayer1Move;
                @Player1Attack.started -= instance.OnPlayer1Attack;
                @Player1Attack.performed -= instance.OnPlayer1Attack;
                @Player1Attack.canceled -= instance.OnPlayer1Attack;
                @Player1Run.started -= instance.OnPlayer1Run;
                @Player1Run.performed -= instance.OnPlayer1Run;
                @Player1Run.canceled -= instance.OnPlayer1Run;
                @Player1UseSkill.started -= instance.OnPlayer1UseSkill;
                @Player1UseSkill.performed -= instance.OnPlayer1UseSkill;
                @Player1UseSkill.canceled -= instance.OnPlayer1UseSkill;
                @Player2Move.started -= instance.OnPlayer2Move;
                @Player2Move.performed -= instance.OnPlayer2Move;
                @Player2Move.canceled -= instance.OnPlayer2Move;
                @Player2Attack.started -= instance.OnPlayer2Attack;
                @Player2Attack.performed -= instance.OnPlayer2Attack;
                @Player2Attack.canceled -= instance.OnPlayer2Attack;
                @Player2Run.started -= instance.OnPlayer2Run;
                @Player2Run.performed -= instance.OnPlayer2Run;
                @Player2Run.canceled -= instance.OnPlayer2Run;
                @Player2UseSkill.started -= instance.OnPlayer2UseSkill;
                @Player2UseSkill.performed -= instance.OnPlayer2UseSkill;
                @Player2UseSkill.canceled -= instance.OnPlayer2UseSkill;
            }

            public void RemoveCallbacks(IGamePlayActions instance)
            {
                if (m_Wrapper.m_GamePlayActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGamePlayActions instance)
            {
                foreach (var item in m_Wrapper.m_GamePlayActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GamePlayActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GamePlayActions @GamePlay => new GamePlayActions(this);
        public interface IGamePlayActions
        {
            void OnPlayer1Move(InputAction.CallbackContext context);
            void OnPlayer1Attack(InputAction.CallbackContext context);
            void OnPlayer1Run(InputAction.CallbackContext context);
            void OnPlayer1UseSkill(InputAction.CallbackContext context);
            void OnPlayer2Move(InputAction.CallbackContext context);
            void OnPlayer2Attack(InputAction.CallbackContext context);
            void OnPlayer2Run(InputAction.CallbackContext context);
            void OnPlayer2UseSkill(InputAction.CallbackContext context);
        }
    }
}
